{{- if .Values.mutate.certificate.useCertManager }}
---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "piggy-webhooks.selfSignedIssuer" . }}
  labels:
    {{- include "piggy-webhooks.labels" . | nindent 4 }}
spec:
  selfSigned: {}

---

# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "piggy-webhooks.rootCACertificate" . }}
  labels:
    {{- include "piggy-webhooks.labels" . | nindent 4 }}
spec:
  isCA: true
  commonName: {{ include "piggy-webhooks.rootCACertificate" . }}
  secretName: {{ include "piggy-webhooks.rootCACertificate" . }}
  {{- if .Values.mutate.certificate.certManager.privateKey }}
  privateKey:
    {{- toYaml .Values.mutate.certificate.certManager.privateKey | nindent 4 }}
  {{- end }}
  duration: {{ mul 10 .Values.mutate.certificate.certValidity -}}h
  issuerRef:
    name: {{ include "piggy-webhooks.selfSignedIssuer" . }}
 
---

# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "piggy-webhooks.rootCAIssuer" . }}
  labels:
    {{- include "piggy-webhooks.labels" . | nindent 4 }}
spec:
  ca:
    secretName: {{ include "piggy-webhooks.rootCACertificate" . }}

---

# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "piggy-webhooks.certificate" . }}
  labels:
    {{- include "piggy-webhooks.labels" . | nindent 4 }}
spec:
  secretName: {{ include "piggy-webhooks.certificate" . }}
  duration: {{ .Values.mutate.certificate.certValidity -}}h
  issuerRef:
    name: {{ include "piggy-webhooks.rootCAIssuer" . }}
  dnsNames:
  - {{ include "piggy-webhooks.fullname" . }}
  - {{ include "piggy-webhooks.fullname" . }}.{{ .Release.Namespace }}
  - {{ include "piggy-webhooks.fullname" . }}.{{ .Release.Namespace }}.svc
{{- end }}